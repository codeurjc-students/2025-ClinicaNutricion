name: CI/CD Full Stack Deploy

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main 

jobs:
  # Backend: análisis estático, unit tests y test de integración
  test-backend:
    if: >
      (github.event_name == 'push' && github.ref == 'refs/heads/develop') ||
      (github.event_name == 'pull_request' && github.base_ref == 'main')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Static analysis (Checkstyle, PMD, SpotBugs)
        working-directory: backend-clinica
        run: mvn verify -DskipTests=true

      - name: Unit tests
        working-directory: backend-clinica
        run: mvn test -Dtest=*ServiceTest

      - name: Integration tests
        working-directory: backend-clinica
        run: mvn test -Dtest=*IntegrationTest

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-reports
          path: backend-clinica/target/surefire-reports

  # Frontend: lint, stylelint, prettier-check
  test-frontend:
    runs-on: ubuntu-latest
    needs: test-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.11.0'

      - name: Install dependencies
        run: npm install --legacy-peer-deps
        working-directory: frontend-clinica

      - name: Run ESLint
        run: npm run lint
        working-directory: frontend-clinica

      - name: Run Stylelint
        run: npm run stylelint
        working-directory: frontend-clinica

      - name: Check formatting (Prettier)
        run: npm run format:check
        working-directory: frontend-clinica

  # Backend: empaquetado, deploy a Elastic Beanstalk y Smoke Test
  deploy-backend:
    if: github.ref == 'refs/heads/main'
    needs: test-frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Build backend with Maven
        working-directory: backend-clinica
        run: mvn clean package -DskipTests

      - name: Install EB CLI
        run: pip install awsebcli --upgrade

      - name: Upload and register new EB version
        working-directory: backend-clinica
        run: |
          VERSION_LABEL="v-${{ github.run_number }}-${{ github.sha }}"
          echo "Usando version-label: $VERSION_LABEL"
          aws s3 cp target/clinicanutricion-0.0.1-SNAPSHOT.jar \
            s3://${{ secrets.EB_S3_BUCKET }}/clinicanutricion-0.0.1-SNAPSHOT.jar
          aws elasticbeanstalk create-application-version \
            --application-name ${{ secrets.EB_APPLICATION_NAME }} \
            --version-label "$VERSION_LABEL" \
            --source-bundle S3Bucket="${{ secrets.EB_S3_BUCKET }}",S3Key="clinicanutricion-0.0.1-SNAPSHOT.jar"

      - name: Update EB environment
        working-directory: backend-clinica
        run: |
          aws elasticbeanstalk update-environment \
            --application-name ${{ secrets.EB_APPLICATION_NAME }} \
            --environment-name ${{ secrets.EB_ENVIRONMENT_NAME }} \
            --version-label "v-${{ github.run_number }}"

      - name: Smoke test
        run: curl -f https://api.clinicanutricion.es/health

  # Frontend: build y deploy a S3
  deploy-frontend:
    if: github.ref == 'refs/heads/main'
    needs: deploy-backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22.11.0'

      - name: Install dependencies
        run: npm install --legacy-peer-deps
        working-directory: frontend-clinica

      - name: Build frontend
        working-directory: frontend-clinica
        env:
          REACT_APP_API_BASE_URL: ${{ secrets.REACT_APP_API_BASE_URL }}
          REACT_APP_FRONTEND_BASE_URL: ${{ secrets.REACT_APP_FRONTEND_URL }}
          REACT_APP_COGNITO_AUTHORITY: ${{ secrets.REACT_APP_COGNITO_AUTHORITY }}
          REACT_APP_COGNITO_CLIENT_ID: ${{ secrets.REACT_APP_COGNITO_CLIENT_ID }}
          REACT_APP_COGNITO_REDIRECT_URI: ${{ secrets.REACT_APP_COGNITO_REDIRECT_URI }}
          REACT_APP_COGNITO_LOGOUT_URI: ${{ secrets.REACT_APP_COGNITO_LOGOUT_URI }}
          REACT_APP_COGNITO_REGISTER_BASE_URL: ${{ secrets.REACT_APP_COGNITO_REGISTER_BASE_URL }}
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to S3
        run: aws s3 sync frontend-clinica/build/ s3://react-nurition-clinic-app --delete

      - name: Invalidate CloudFront cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
